on:
  issue_comment:
    types:
      - created
jobs:
  check-readme:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
        with:
          ref: "refs/pull/${{ github.event.issue.number }}/head"
          submodules: true
   
      - name: Update the available versions table in README.md
        shell: bash
        run: |
          sha=$(git rev-parse HEAD)
          sudo apt update && sudo apt -y install python3 python3-natsort
          result="failure"
          git status
          make version-table
          git diff --ignore-submodules=all --exit-code && result="success"
          if [[ "$result" == "failure" ]]; then
            echo "Incorrect version table in README.md"
            echo "Please re-generate it with:"
            echo "'make version-table'"
            echo "Note that you need to have 'python' and 'python-natsort' installed"
          fi
          echo "result=$result" >> "$GITHUB_OUTPUT"
          echo "sha=$sha" >> "$GITHUB_OUTPUT"

  container-tests:
    needs: check-readme
    name: "Container tests: ${{ matrix.version }} - ${{ matrix.os_test }}"
    runs-on: ubuntu-latest
    concurrency:
      group: container-${{ github.event.issue.number }}-${{ matrix.version }}-${{ matrix.os_test }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        version: [ "2.4", "2.4-micro" ]
        os_test: [ "fedora", "rhel8", "rhel9", "rhel10", "c9s", "c10s" ]
        test_case: [ "container" ]

    if: |
      github.event.issue.pull_request
      && (contains(github.event.comment.body, '[test]') || contains(github.event.comment.body, '[test-all]'))
      && contains(fromJson('["OWNER", "MEMBER"]'), github.event.comment.author_association)
    steps:
      - uses: sclorg/tfaga-wrapper@main
        with:
          os_test: ${{ matrix.os_test }}
          version: ${{ matrix.version }}
          test_case: ${{ matrix.test_case }}
          public_api_key: ${{ secrets.TF_PUBLIC_API_KEY }}
          private_api_key: ${{ secrets.TF_INTERNAL_API_KEY }}
